workspace:
  base: /go
  path: src/github.com/okoeth/starter-golang

pipeline:
  dev-build:
    image: golang
    environment:
     - MONGODB_HOST=mongo
    commands:
      - go build
      - go test
    when:
      branch: [ f-dev-*, master ]

  test-deploy:
    image: okoeth/openshift-client
    environment:
#      - OC_INSTANCE=172.30.0.1:443
#      - STORAGE=gluster
      - STORAGE=aws
      - REPOSITORY=https://github.com/okoeth/starter-golang.git#${DRONE_BRANCH}
      - NAMESPACE=ng-${DRONE_BRANCH}
    commands:
      - oc version
      - oc login $OC_INSTANCE:$OC_PORT -u $OC_USER -p $OC_PASSWORD --insecure-skip-tls-verify
      - cd /go/src/github.com/okoeth/starter-golang/openshift
      - ./createNamespace.sh $NAMESPACE starter
      - ./createBuildSecret.sh $NAMESPACE $GIT_USER $GIT_PASSWORD
      - ./createAppdb.sh $NAMESPACE starter $STORAGE
      - ./createApp.sh $NAMESPACE starter $REPOSITORY
    secrets: [ oc_instance, oc_port, oc_user, oc_password, git_user, git_password ]
    when:
      branch: [ f-test-*, test ]

  test-integrate:
    image: okoeth/openshift-client
    environment:
#      - TEST_SERVER=starter-ng-${DRONE_BRANCH}.192.168.64.2.nip.io
    commands:
       - echo "Running integration test"
       - ./integration/run_tests.sh starter-ng-${DRONE_BRANCH}.$OC_INSTANCE
    secrets: [ oc_instance ]
    when:
      branch: [ f-test-*, test ]

  # test-publish:
  #   image: plugins/docker
  #   username: $DOCKER_USER
  #   password: $DOCKER_PASSWORD
  #   repo: okoeth/starter-golang
  #   tags: test-latest
  #   environment:
  #     - DOCKER_LAUNCH_DEBUG=true
  #   secrets: [ docker_user, docker_password ]
  #   debug: true
  #   when:
  #     branch: [ test ]
      
  release-build:
    image: docker
    commands:
      - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - docker build --rm -t okoeth/starter-golang:${DRONE_COMMIT_SHA} .
      - docker push okoeth/starter-golang:${DRONE_COMMIT_SHA}
      - docker rmi okoeth/starter-golang:${DRONE_COMMIT_SHA}
#    volumes:
#       - /var/run/docker.sock:/var/run/docker.sock    
    secrets: [ docker_user, docker_password ]
    when:
      branch: [ prod ]
      local: true

  release-deploy:
    image: okoeth/openshift-client
    environment:
#      - STORAGE=gluster
      - STORAGE=aws
      - NAMESPACE=ng-${DRONE_BRANCH}
    commands:
      - oc login $OC_INSTANCE:$OC_PORT -u $OC_USER -p $OC_PASSWORD --insecure-skip-tls-verify
      - cd /go/src/github.com/okoeth/starter-golang/openshift
      - ./createNamespace.sh $NAMESPACE starter
      - ./createAppdb.sh $NAMESPACE starter $STORAGE
      - ./createAppFromImage.sh $NAMESPACE starter okoeth/starter-golang:${DRONE_COMMIT_SHA}
    secrets: [ oc_instance, oc_port, oc_user, oc_password ]
    when:
      branch: [ prod ]
      local: true

services:
  mongo:
    image: centos/mongodb-26-centos7
    environment:
     - MONGODB_USER=user
     - MONGODB_PASSWORD=password
     - MONGODB_DATABASE=starterdb
     - MONGODB_ADMIN_PASSWORD=admin_password
